html {
  box-sizing: border-box;
  font-size: 16px;
  font-family: sans-serif;
  scroll-behavior: smooth;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

a[href="#top"] {
  margin: 1rem;
  display: block;
  font-size: 2rem;
  text-align: center;
  text-decoration: none;
}

p {
  margin: 0;
}

h2 {
  margin-top: 50vh;
  text-align: center;
}

img {
  margin: auto;
  display: block;
  max-width: 100%;
  height: auto;
}

.menu {
  margin-bottom: 100vh;
  font-size: 125%;
}

.menu li {
  margin-bottom: 1rem;
}

.container {
  margin: 0 auto;
  width: 80%;
  height: 80vh;
  background-color: #222;
  border: medium solid #000;
}

.item {
  padding: 1rem;
  font-size: 1.25rem;
  background-color: #666;
  border: medium solid #999;
}

.sub-item {
  padding: 1rem;
  background-color: #ddd;
  border: medium solid #ccc;
}

.grid-explicit {
  display: grid;
  /* Grid de 3cx3r */
  grid-template-columns: 50% 100px 1fr; 
  grid-template-rows: 2rem 20vh 30%;
  /* Grid de 5cx4r */
  grid-template-columns: repeat(5, 20%); /*repeat(columnas,tamaño)*/
  grid-template-rows: repeat(4, auto);
  grid-template-rows: repeat(4, 25%);
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(4, 1fr);
  /* Grid de 4cx5r */
  grid-template-columns: 20% repeat(2, 30%) 20%; /*la primera columna de 20% las dos siguientes de 30% y la ultima de 30%*/
  grid-template-rows: repeat(5, auto);
  grid-column-gap: 2rem;
  column-gap: 4rem;
  grid-row-gap: 1rem;
  row-gap: 2rem;
  /* gap: row column */
  grid-gap: 100px 0px;
  gap: 1vh 1vw;
  gap: 0;
}

.grid-explicit .item:nth-child(10) {/*Entra a la grid-explicit y selecciona el hijo nro 10*/
  color: cyan;
  /*--Muevo el item 10 a una nueva posicion--*/
  /*grid-row-start: 2;
  grid-row-end: 3;
  grid-column-start: 2;
  grid-column-end: 3;*/

  /*--Muevo el item 10 a una nueva posicion pero ocupo dos celdas en las columnas--*/
  /*grid-row: 2 / 3;
  grid-column: 3 / 5;*/

  /*-- grid-area: grid-row-start / grid-row-end / grid-column-start / grid-column-end; --*/
  grid-area: 2 / 3 / 3 / 5;
}

.grid-explicit .item:nth-child(12) {
  color: cyan;
  grid-row: span 2; /*Abarca dos filas*/
  grid-column: span 3; /*Abarca tres columnas*/
}

.grid-explicit .item:nth-child(15) { /*mezcla de grid area y span*/
  color: cyan;
  grid-row: 1 / span 2; /*se desplaza una fila y espande dos*/
  grid-column: 1 / span 2;
}

.grid-line-names {
  display: grid;
  /* Grid de 3cx3r */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
  grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];
  grid-template-rows: [linea-r1] auto [linea-r2] auto [linea-r3] auto [linea-r4];
}

.grid-line-names .item:nth-child(3) {
  color: cyan;
  grid-row: linea-r3 / linea-r4;
  grid-column: linea-c1 / linea-c4;
  grid-area: linea-r3 / linea-r4 / linea-c1 / linea-c4;
}

/***************Grid Area***************/
/* https://www.youtube.com/watch?v=eUDJVB4e-Bw&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=5&ab_channel=jonmircha */
.grid-areas {
  display: grid;
  /* Grid de 2cx3r */
  grid-template-columns: 1fr 200px;
  grid-template-rows: 100px repeat(2, 1fr) 60px;
  grid-template-areas:
    "header   header"
    "content  sidebar"
    "content  ."
    "footer     footer";
}

/*--Enlazo los nombres de area dew "grid-template-areas" de la clase de arriba en con el html--*/
.header {
  grid-area: header;
}

.content {
  grid-area: content;
}

.sidebar {
  grid-area: sidebar;
}

.footer {
  grid-area: footer;
}

/*************** Grid Implicita ***************/
/* https://www.youtube.com/watch?v=x63kKPlnLO0&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=6&ab_channel=jonmircha */
.grid-implicit {
  width: 40%; /*cada set de item ocupa 40% es decir que tengo ocupado el 80% pq tengo dos en el html*/
  display: grid; /*Grid tiene la capacidad de seguir acomando filas y columnas nuevas aun cuando exedan el numero original que yo defini, ademas se comporta como elemento de bloque*/
  display: inline-grid; /*inline-grid: va a ocupar el espacio requerido, no puedo aplicar margenes laterales*/
  /* Grid de 4cx3r en este caso solo puedo acomodar 12 elementos pero grid tiene la capacidad de agregar mas item en caso de que supere los lugares iniciales que yo defini*/
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 200px);
}

/*************** Flujo de la Grid (Grid Flow) ***************/
/* https://www.youtube.com/watch?v=GTGOsiDGKwA&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=7&ab_channel=jonmircha */
.grid-flow {
  display: grid;
  /* Grid de 5cx3r 15 elementos CONTEMPLADOS a esto se le agregan 4 quer no estan contemplados*/
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(3, 150px);
 
  grid-auto-flow: row; /*se acomandan por filas*/
  grid-auto-rows: 100px;/*Lo uso para determinar el tamaño de todas las filas que generen IMPLICITAMENTE en caso de que use grid-auto-flow: row*/
  
  grid-auto-flow: column; /*se acomandan por columnas*/
  grid-auto-columns: 50px; /*Lo uso para determinar el tamaño de todas las columnas que generen IMPLICITAMENTE en caso de que use  grid-auto-flow: column*/
}

/*************** Flujo Denso de la Grid (Grid Flow Dense) ***************/
/* https://www.youtube.com/watch?v=iRkPfACKk6E&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=8&ab_channel=jonmircha */
.grid-flow-dense {
  display: grid;
  /* Grid de 5cx4r */
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(4, 200px);
  grid-auto-flow: row dense; /*respeta el numero de columnas explicitas, "dense" aprovecha el espacio vacio que queda de las celdas explicitas cuando se hace un acomodo min 12:43*/
  grid-auto-flow: column dense; /*respeta el numero de filas explicitas*/
}

/* .grid-flow-dense .item:nth-child(9) {
  color: cyan;
  grid-row: span 3;
  grid-column: span 3;
} */

/*.grid-flow-dense .item:nth-child(11) {
  color: cyan;
  grid-row: span 3;
  grid-column: span 3;
}*/

/*************** Grid Layers: Celdas en capas (superposición) ***************/
/* https://www.youtube.com/watch?v=bCULAgZNT_Y&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=9&ab_channel=jonmircha */
.grid-layers {
  display: grid;
  /* Grid de 4cx4r */
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4, 1fr);
}

.grid-layers .item:nth-child(1) {
  background-color: #dbea33;
  /*Limites para hacer el cuadro*/
  grid-column: 1 / 3; /*De la LINEA(elemento que SEPARA a los cuadrados) 1 a la 3*/
  grid-row: 1 / 3;
}

.grid-layers .item:nth-child(2) {
  background-color: #497af8;
  /*Limites para hacer el cuadro*/
  grid-column: 3 / 5;
  grid-row: 1 / 3;
}

.grid-layers .item:nth-child(3) {
  background-color: #90e971;
  /*Limites para hacer el cuadro*/
  grid-column: 1 / 3;
  grid-row: 3 / 5;
}

.grid-layers .item:nth-child(4) {
  background-color: #f0952a;
  /*Limites para hacer el cuadro*/
  grid-column: 3 / 5;
  grid-row: 3 / 5;
}

.grid-layers .item:nth-child(5) {
  background-color: #c92af0;
  opacity: 0.75;
  /*Limites para hacer el cuadro*/
  grid-column: 2 / 4;
  grid-row: 2 / 4;
}

/*************** Orden y Alineación de Grid Items ***************/
/* https://www.youtube.com/watch?v=I3UqxC-zlHY&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=10&ab_channel=jonmircha */
.grid-order {
  display: grid;
  /* Grid de 3cx2r */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
}
/*--Order para determinar el orden elementos*/
.grid-order .item:nth-child(1) {
  /* default es 0, valores negativos y positivos, mientras mas positivo un elemento mas al final va a ir y viceversa */
  order: 1;
}

.grid-order .item:nth-child(2) {
  order: 2;
}

.grid-order .item:nth-child(5) {
  order: -1;
}

.grid-align {
  display: grid;
  /* Grid de 3cx2r */
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(2, 200px);
  /* justify-items alinea mis elementos grid en el eje horizontal (X) */
  justify-items: stretch; /*ocupe todo el espacio en x*/
  justify-items: start;  /*va al incio de x de su track y ocupa el espacio de su contenido*/
  justify-items: end;    /*va al fin de x de su track y ocupa el espacio de su contenido*/
  justify-items: center; /*va al centro de x de su track y ocupa el espacio de su contenido*/
  /* justify-items alinea mis elementos grid en el eje vertical (Y) */
  align-items: stretch;
  align-items: start;
  align-items: end;
  align-items: center;
}

.grid-align .item:nth-child(4) {
  justify-self: start;
  align-self: start;
}
/*************** Alineación de Grid Tracks(lo mismo que la clase pasada PERO PARA TRACKS) ***************/
/* https://www.youtube.com/watch?v=IQzW7QnuYvU&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=11&ab_channel=jonmircha */
/*cuando dice tracks se refiere a filas y columnas*/
.grid-align-tracks {
  display: grid;
  /* Grid de 3cx2r */
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(2, 200px);
  /* justify-content alinea los tracks de la grid en el eje horizontal (X) */
  justify-content: start;
  justify-content: end;
  justify-content: center;
  justify-content: space-between; /*Reparte espacio sobrante entre los tracks*/
  justify-content: space-around; /*Lo mismo que lo anterior pero considera las orillas*/
  justify-content: space-evenly; /*Mismo espacio entro los elementos y orillas*/
  /* align-content alinea los tracks de la grid en el eje vertical (Y) */
  align-content: start;
  align-content: end;
  align-content: center;
  align-content: space-between;
  align-content: space-around;
  align-content: space-evenly;
}

/*************** Tamaños Máximos y Mínimos de Grid Tracks ***************/
/* https://www.youtube.com/watch?v=m3EaKtYe6Gg&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=12&ab_channel=jonmircha */
.grid-min-max {
  display: grid;
  /* Grid de 4cx?r */
  grid-template-columns: repeat(4, 1fr);
  /*minmax(tam minimo, tam maximo)*/
  grid-template-columns: repeat(4, minmax(100px, 200px));
  grid-template-columns: repeat(4, minmax(min-content, 200px)); /*min-content: minimo de contenido que tiene*/
  grid-template-columns: repeat(4, minmax(100px, min-content));
  grid-template-columns: repeat(4, minmax(100px, max-content)); /*max-content: maximo de contenido que tiene*/
  grid-template-columns: repeat(4, minmax(max-content, 200px));
  grid-template-columns: repeat(4, minmax(min-content, max-content));
}

/***************  Grids con Patrones Repetitivos  ***************/
/* https://www.youtube.com/watch?v=0W0gjpXqbdo&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=13&ab_channel=jonmircha */
.grid-repeat {
  display: grid;
  /* Grid de 4cx4r */
  grid-template-columns: repeat(4, 10% 20% 30% 40%);/*se repite 4 veces el patron es decir que vo ya tener 4x(10% 20% 30% 40%) siendo 10% 20% 30% 40% el patron*/
  grid-template-columns: repeat(3, 10% 20% 30% 40%);
  grid-template-columns: repeat(2, 10% 20% 30% 40%);
  grid-template-columns: repeat(1, 10% 20% 30% 40%);
  grid-template-rows: repeat(2, 100px 200px);
  grid-auto-rows: 150px; /*para las rows implicitas*/
}

/***************  Grids Dinámicas. Responsive sin Media Queries  ***************/
/* https://www.youtube.com/watch?v=inVlqjPNmD8&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=14&ab_channel=jonmircha */
.grid-dynamics {
  display: grid;
  /* Grid de 4cx?r */
  grid-template-columns: repeat(4, 100px);
  /* auto-fill Rellena la grid con tracks generados dinámicamente */
  grid-template-columns: repeat(auto-fill, 100px);
  /* auto-fit Ajusta la grid con los tracks existentes */
  grid-template-columns: repeat(auto-fit, 100px);
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
}

.grid-responsive {
  display: grid;
  /* Grid de ?cx?r */
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

/*************** Grids Anidadas & Subgrids  ***************/
/* https://www.youtube.com/watch?v=vnK7MMSXGVI&list=PLvq-jIkSeTUY628cyd9LVbXSXi2xG9mUl&index=15&ab_channel=jonmircha */
.grid-nested {
  display: grid;
  /* Grid de 3cx?r */
  grid-template-columns: repeat(3, 1fr);
}

.grid {
  display: grid;
  /* Grid de 3cx4r */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, 1fr);
}

.subgrid {
  /*Por algun motivo no anda pero deberia andar, creo que es porque no esta soportado en chrome y use chrome para probar el subgrid*/
  /* Para que la característica de subgrid funcione es necesario hacer los siguiente:
    1) Definir explícitamente el tamaño que ocupará el elemento que aplicará subgrid dentro del contenedor padre grid, es decir definir sus propiedades grid-column y grid-row.
    2) Aplicar display grid al elemento que aplicará subgrid.
    3) Aplicar el valor de subgrid a las columnas, a las filas o ambas depende de cómo se requiera */
  /*Paso 1*/
  grid-column: span 3;
  grid-row: 1 / 3;
  /*Paso 2*/
  display: grid; 
  /*Paso 3*/
  grid-template-columns: subgrid;
  grid-template-rows: subgrid;
}